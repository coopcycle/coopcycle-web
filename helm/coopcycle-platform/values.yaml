# Default values for api-platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

php:
  image:
    repository: "chart-example.local/api-platform/php"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  appEnv: prod
  appDebug: "0"
  appSecret: ""
  corsAllowOrigin: "^https?://.*?\\.coopcycle\\.org"
  trustedHosts: "^127\\.0\\.0\\.1|localhost|.*\\.coopcycle\\.org$"
  trustedProxies:
    - "127.0.0.1"
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"
  caddyGlobalOptions: ""

# You may prefer using the managed version in production: https://mercure.rocks
mercure:
  publicUrl: https://chart-example.local/.well-known/mercure
  # Change me!
  jwtSecret: "!ChangeThisMercureHubJWTSecretKey!"
  extraDirectives: cors_origins http://chart-example.local https://chart-example.local

# Full configuration: https://github.com/bitnami/charts/tree/main/bitnami/redis
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false

centrifugo:
  enabled: true
  config:
    engine: "redis"
    admin: true
  # FIXME; use secrets for PROD deployment
  secrets:
    tokenHmacSecretKey: "CentrifugoToken"
    adminPassword: "centrifugo"
    adminSecret: "centrifugo"
    apiKey: "CentrifugoApiKey"
    redisAddress: "redis://coopcycle-platform-redis-master:6379"
  env:
    CENTRIFUGO_ALLOWED_ORIGINS: "http://localhost:*"

tile38:
  enabled: true

typesense:
  enabled: true

osrm:
  enabled: true

mjml:
  enabled: true

smtp:
  enabled: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

startupProbe:
  tcpSocket:
    port: 80
  failureThreshold: 30
  periodSeconds: 10
livenessProbe:
  tcpSocket:
    port: 80
  failureThreshold: 1
  periodSeconds: 30
readinessProbe:
  tcpSocket:
    port: 80
  periodSeconds: 30

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# If you use Mercure, you need the managed or the On Premise version to deploy more than one pod: https://mercure.rocks/docs/hub/cluster
replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
