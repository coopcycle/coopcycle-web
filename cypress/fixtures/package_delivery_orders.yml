include:
  - stores_excl_setup.yml

AppBundle\Entity\Delivery:
  delivery_{1..250}:
    __factory:
      createWithAddress:
        - "@warehouse"
        - "@client_1"
    __calls:
      - setPickupRange:
          - <identity(new \DateTime('today 18:00:00'))>
          - <identity(new \DateTime('today 18:30:00'))>
      - setDropoffRange:
          - <identity(new \DateTime('today 19:00:00'))>
          - <identity(new \DateTime('today 19:30:00'))>
    store: "@store_1"

  delivery_{251..1000}:
    __factory:
      createWithAddress:
        - "@warehouse"
        - "@client_1"
    __calls:
      - setPickupRange:
          - <identity(new \DateTime('today 18:00:00'))>
          - <identity(new \DateTime('today 18:30:00'))>
      - setDropoffRange:
          - <identity(new \DateTime('today 19:00:00'))>
          - <identity(new \DateTime('today 19:30:00'))>
    store: '@store_*'

AppBundle\Entity\Sylius\PricingRulesBasedPrice:
  price_{1..1000}:
    __construct:
      - <numberBetween(500, 20000)>

AppBundle\Entity\Sylius\Order:
  order_{1..1000}:
    __factory:
      '@sylius.factory.order::createForDeliveryAndPrice':
        - "@delivery_<current()>"
        - "@price_<current()>"
    __calls:
#      FIXME: that does not set an order number on each task (normally it's handled by OrderSubscriber)
      - setNumber: [ "A<current()>" ]
      - setState: [ 'new' ]
