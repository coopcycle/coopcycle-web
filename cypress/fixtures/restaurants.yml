# Products

# Packaging

AppBundle\Entity\ReusablePackaging:
  packaging_acme:
    restaurant: "@zero_waste_inc"
    price: 100
    name: 'Acme'
    onHold: 0
    onHand: 9999
    tracked: false

AppBundle\Entity\Sylius\ProductOptionValue:
  hamburger_accompaniment_french_fries_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'HAMBURGER_ACCOMPANIMENT_FRENCH_FRIES_<current()>'
    currentLocale: fr
    value: French Fries
  hamburger_accompaniment_salad_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'HAMBURGER_ACCOMPANIMENT_SALAD_<current()>'
    currentLocale: fr
    value: Salad
  hamburger_drink_cola_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'HAMBURGER_DRINK_COLA_<current()>'
    currentLocale: fr
    value: Cola
  hamburger_drink_still_water_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'HAMBURGER_DRINK_STILL_WATER_<current()>'
    currentLocale: fr
    value: Still Water

AppBundle\Entity\Sylius\ProductOption:
  hamburger_accompaniment_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'HAMBURGER_ACCOMPANIMENT_<current()>'
    strategy: free
    currentLocale: fr
    name: Hamburger Accompaniment
    values: [ "@hamburger_accompaniment_french_fries_<current()>", "@hamburger_accompaniment_salad_<current()>" ]
  hamburger_drink_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'HAMBURGER_DRINK_<current()>'
    strategy: free
    currentLocale: fr
    name: Hamburger Drink
    values: [ "@hamburger_drink_cola_<current()>", "@hamburger_drink_still_water_<current()>" ]

AppBundle\Entity\Sylius\ProductVariant:
  pizza_margherita_default:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Pizza Margherita
    code: PIZZA_MARGHERITA_DEFAULT
    price: 1000
  pizza_reina_default:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Pizza Reina
    code: PIZZA_REINA_DEFAULT
    price: 1000
  sandwich_lunch_special_default:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Sandwich
    code: SANDWICH_LUNCH_SPECIAL_DEFAULT
    price: 3000
  hamburger_default_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Hamburger
    code: 'HAMBURGER_DEFAULT_<current()>'
    price: 1200
  cheeseburger_default_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Cheeseburger
    code: 'CHEESEBURGER_DEFAULT_<current()>'
    price: 1200
  cheesecake_default_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Cheese Cake
    code: 'CHEESECAKE_DEFAULT_<current()>'
    price: 800
  carrotcake_default_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Carrot Cake
    code: 'CARROTCAKE_DEFAULT_<current()>'
    price: 600
  chicken_salad_default:
    taxCategory: "@tva_conso_immediate"
    currentLocale: fr
    name: Salade au poulet
    code: CHICKEN_SALAD_DEFAULT
    price: 600

AppBundle\Entity\Sylius\Product:
  pizza_margherita:
    code: PIZZA_MARGHERITA
    currentLocale: fr
    name: Pizza Margherita
    slug: pizza-margherita
    enabled: true
    variants: [ "@pizza_margherita_default" ]
  pizza_reina:
    code: PIZZA_REINA
    currentLocale: fr
    name: Pizza Reina
    slug: pizza-reina
    enabled: true
    variants: [ "@pizza_reina_default" ]
  sandwich_lunch_special:
    code: SANDWICH_LUNCH_SPECIAL
    currentLocale: fr
    name: Sandwich Lunch Special
    slug: sandwich-lunch-special
    enabled: true
    variants: [ "@sandwich_lunch_special_default" ]
  hamburger_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'HAMBURGER_<current()>'
    currentLocale: fr
    name: Hamburger
    slug: 'hamburger_<current()>'
    enabled: true
    variants: [ "@hamburger_default_<current()>" ]
    options: [ "@hamburger_accompaniment_<current()>", "@hamburger_drink_<current()>" ]
  cheeseburger_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'CHEESEBURGER_<current()>'
    currentLocale: fr
    name: Cheeseburger
    slug: 'cheeseburger_<current()>'
    enabled: true
    variants: [ "@cheeseburger_default_<current()>" ]
    options: [ "@hamburger_accompaniment_<current()>", "@hamburger_drink_<current()>" ]
  cheesecake_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'CHEESECAKE_<current()>'
    currentLocale: fr
    name: Cheese Cake
    slug: 'cheesecake_<current()>'
    enabled: true
    variants: [ "@cheesecake_default_<current()>" ]
  carrotcake_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'CARROTCAKE_<current()>'
    currentLocale: fr
    name: Carrot Cake
    slug: 'carrotcake_<current()>'
    enabled: true
    variants: [ "@carrotcake_default_<current()>" ]
  chicken_salad:
    code: CHICKEN_SALAD
    currentLocale: fr
    name: Salade au poulet
    slug: chicken-salad
    enabled: true
    reusablePackagingEnabled: true
    variants: [ "@chicken_salad_default" ]


AppBundle\Entity\ReusablePackagings:
  reusable_packagins_for_chicken_salad:
    reusablePackaging: "@packaging_acme"
    product: "@chicken_salad"
    units: 1

# Menus

AppBundle\Entity\Sylius\Taxon:
  section_main_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'MAIN_<current()>'
    currentLocale: fr
    slug: 'main_<current()>'
    name: Main
    __calls:
      - addProduct: [ "@hamburger_<current()>" ]
      - addProduct: [ "@cheeseburger_<current()>" ]
  section_desserts_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: 'DESSERTS_<current()>'
    currentLocale: fr
    slug: 'desserts_<current()>'
    name: Desserts
    __calls:
      - addProduct: [ "@cheesecake_<current()>" ]
      - addProduct: [ "@carrotcake_<current()>" ]
  menu_{crazy_hamburger, restaurant_with_cash_on_delivery, restaurant_with_collection}:
    code: "ROOT_<current()>"
    currentLocale: fr
    slug: 'root_<current()>'
    name: Default
    __calls:
      - addChild: [ "@section_main_<current()>" ]
      - addChild: [ "@section_desserts_<current()>" ]
  pizza_express_section_pizzas:
    code: PIZZA_EXPRESS_PIZZAS
    currentLocale: fr
    slug: pizza-express-pizzas
    name: Pizzas
    __calls:
      - addProduct: [ "@pizza_margherita" ]
      - addProduct: [ "@pizza_reina" ]
  pizza_express_menu:
    code: PIZZA_EXPRESS_ROOT
    currentLocale: fr
    slug: pizza-express-root
    name: Default
    __calls:
      - addChild: [ "@pizza_express_section_pizzas" ]
  lunch_menu_main:
    code: LUNCH_MENU_MAIN
    currentLocale: fr
    slug: lunch-menu-main
    name: Main
    __calls:
      - addProduct: [ "@sandwich_lunch_special" ]
  lunch_menu:
    code: LUNCH_MENU
    currentLocale: fr
    slug: lunch-menu
    name: Default
    __calls:
      - addChild: [ "@lunch_menu_main" ]
  zero_waste_inc_section_salads:
    code: ZERO_WASTE_SALADS
    currentLocale: fr
    slug: zero-waste-salads
    name: Salades
    __calls:
      - addProduct: [ "@chicken_salad" ]
  zero_waste_menu:
    code: ZERO_WASTE_ROOT
    currentLocale: fr
    slug: zero-waste-root
    name: Default
    __calls:
      - addChild: [ "@zero_waste_inc_section_salads" ]

# Restaurants

AppBundle\Entity\Contract:
  contract_1:
    flatDeliveryPrice: 350
    feeRate: 0.00
  contract_2:
    flatDeliveryPrice: 350
    feeRate: 0.00
  contract_3:
    flatDeliveryPrice: 350
    feeRate: 0.00
  contract_4:
    flatDeliveryPrice: 350
    feeRate: 0.00

AppBundle\Entity\LocalBusiness:
  crazy_hamburger:
    name: Crazy Hamburger
    address: "@address_1"
    openingHours: [ 'Mo-Su 09:30-23:59' ]
    enabled: true
    contract: "@contract_1"
    edenred_enabled: false
    edenred_trcard_enabled: false
    edenred_sync_sent: false
    __calls:
      - setMinimumAmount: [ 'delivery', 1500 ]
      - addProduct: [ "@hamburger_crazy_hamburger" ]
      - addProduct: [ "@cheeseburger_crazy_hamburger" ]
      - addProduct: [ "@cheesecake_crazy_hamburger" ]
      - addProduct: [ "@carrotcake_crazy_hamburger" ]
      - addProduct: [ "@sandwich_lunch_special" ]
      - addTaxon: [ "@menu_crazy_hamburger" ]
      - addTaxon: [ "@lunch_menu" ]
      - setMenuTaxon: [ "@menu_crazy_hamburger" ]
  restaurant_with_cash_on_delivery:
    name: Restaurant with cash on delivery
    address: "@address_1"
    openingHours: [ 'Mo-Su 09:30-23:59' ]
    enabled: true
    contract: "@contract_1"
    edenred_enabled: false
    edenred_trcard_enabled: false
    edenred_sync_sent: false
    cash_on_delivery_enabled: true
    __calls:
      - setMinimumAmount: [ 'delivery', 1500 ]
      - addProduct: [ "@hamburger_restaurant_with_cash_on_delivery" ]
      - addProduct: [ "@cheeseburger_restaurant_with_cash_on_delivery" ]
      - addProduct: [ "@cheesecake_restaurant_with_cash_on_delivery" ]
      - addProduct: [ "@carrotcake_restaurant_with_cash_on_delivery" ]
      - addTaxon: [ "@menu_restaurant_with_cash_on_delivery" ]
      - setMenuTaxon: [ "@menu_restaurant_with_cash_on_delivery" ]
  restaurant_with_collection:
    name: Restaurant with collection
    address: "@address_1"
    openingHours: [ 'Mo-Su 09:30-23:59' ]
    enabled: true
    contract: "@contract_1"
    edenred_enabled: false
    edenred_trcard_enabled: false
    edenred_sync_sent: false
    __calls:
      - setMinimumAmount: [ 'delivery', 1500 ]
      - setMinimumAmount: [ 'collection', 1500 ]
      - addFulfillmentMethod: [ 'collection', true ]
      - setOpeningHours:
          - [ 'Mo-Su 09:30-23:59' ]
          - 'collection'
      - addProduct: [ "@hamburger_restaurant_with_collection" ]
      - addProduct: [ "@cheeseburger_restaurant_with_collection" ]
      - addProduct: [ "@cheesecake_restaurant_with_collection" ]
      - addProduct: [ "@carrotcake_restaurant_with_collection" ]
      - addTaxon: [ "@menu_restaurant_with_collection" ]
      - setMenuTaxon: [ "@menu_restaurant_with_collection" ]
  pizza_express:
    name: Pizza Express
    address: "@address_2"
    openingHours: [ 'Mo-Su 09:30-23:30' ]
    enabled: true
    contract: "@contract_2"
    edenred_enabled: false
    edenred_trcard_enabled: false
    edenred_sync_sent: false
    __calls:
      - setMinimumAmount: [ 'delivery', 1500 ]
      - setMinimumAmount: [ 'collection', 1500 ]
      - addProduct: [ "@pizza_margherita" ]
      - addProduct: [ "@pizza_reina" ]
      - addTaxon: [ "@pizza_express_menu" ]
      - setMenuTaxon: [ "@pizza_express_menu" ]
  zero_waste_inc:
    name: Zero Waste Inc.
    address: "@address_2"
    openingHours: [ 'Mo-Su 09:30-23:30' ]
    enabled: true
    contract: "@contract_3"
    edenred_enabled: false
    edenred_trcard_enabled: false
    edenred_sync_sent: false
    depositRefundEnabled: true
    __calls:
      - setMinimumAmount: [ 'delivery', 1500 ]
      - setMinimumAmount: [ 'collection', 1500 ]
      - addReusablePackaging: [ "@packaging_acme" ]
      - addProduct: [ "@chicken_salad" ]
      - addTaxon: [ "@zero_waste_menu" ]
      - setMenuTaxon: [ "@zero_waste_menu" ]

AppBundle\Entity\User:
  default_user:
    __factory:
      '@Nucleos\UserBundle\Util\UserManipulator::create':
        - 'resto_1'
        - 'resto_1'
        - 'resto_1@coopcycle.org'
        - true
        - false
    roles: [ 'ROLE_RESTAURANT' ]
    restaurants: [ '@crazy_hamburger' ]
  restaurant_with_cash_on_delivery_owner:
    __factory:
      '@Nucleos\UserBundle\Util\UserManipulator::create':
        - 'restaurant_with_cash_on_delivery_owner'
        - '12345678'
        - 'restaurant_with_cash_on_delivery_owner@coopcycle.org'
        - true
        - false
    roles: [ 'ROLE_RESTAURANT' ]
    restaurants: [ '@restaurant_with_cash_on_delivery' ]

AppBundle\Entity\BusinessRestaurantGroup:
  business_restaurant_group1:
    name: 'Business Restaurant Group 1'
    contract: "@contract_4"
    __calls:
      - setOpeningHours:
          - ['Mo-Fr 11:30-14:30']
          - 'delivery'

AppBundle\Entity\BusinessRestaurantGroupRestaurantMenu:
  platform_catering_crazy_hamburger:
    businessRestaurantGroup: "@business_restaurant_group1"
    restaurant: "@crazy_hamburger"
    menu: "@lunch_menu"

