AppBundle\Entity\User:
  attributes:
    username:
      groups: ['user', 'order']
    email:
      groups: ['user', 'order']
    addresses:
      groups: ['user']
    telephone:
      groups: ['user', 'order', 'user_update']
    roles:
      groups: ['user']
    givenName:
      groups: ['order']
    familyName:
      groups: ['order']

AppBundle\Entity\Sylius\Customer:
  attributes:
    username:
      groups: ['customer', 'order', 'foodtech_order_minimal']
    email:
      groups: ['customer', 'order', 'foodtech_order_minimal']
    fullName:
      groups: ['customer', 'order', 'foodtech_order_minimal']
    telephone:
      groups: ['customer', 'order', 'customer_update']
    phoneNumber:
      groups: ['customer', 'order', 'customer_update']

AppBundle\Entity\Sylius\Taxon:
  attributes:
    code:
      groups: ['restaurant_menu', 'restaurant_menus']
    name:
      groups: ['restaurant_menu', 'restaurant_menus']

AppBundle\Entity\Sylius\OrderEvent:
  attributes:
    type:
      groups: ['order']
    data:
      groups: ['order']
    createdAt:
      groups: ['order']

Sylius\Component\Order\Model\Order:
  attributes:
    id:
      groups: ['order']
    hasReceipt:
      groups: [ 'order', 'order_create', 'order_update' ]
    restaurant:
      groups: ['order', 'order_create', 'cart', 'order_update']
    vendor:
      groups: ['order', 'foodtech_order_minimal']
    shippingAddress:
      groups: ['order', 'order_create', 'cart', 'order_update', 'foodtech_order_minimal']
    shippedAt:
      groups: ['order', 'order_create', 'cart', 'order_update']
    shippingTimeRange:
      groups: ['order', 'order_create', 'cart', 'order_update', 'foodtech_order_minimal']
    customer:
      groups: ['order', 'cart', 'foodtech_order_minimal']
    items:
      groups: ['order', 'order_create', 'cart', 'pricing_deliveries']
    total:
      groups: ['order', 'cart', 'pricing_deliveries', 'foodtech_order_minimal', 'package_delivery_order_minimal']
    number:
      groups: ['order', 'foodtech_order_minimal', 'package_delivery_order_minimal']
    itemsTotal:
      groups: ['order', 'cart']
    taxTotal:
      groups: ['order', 'pricing_deliveries', 'package_delivery_order_minimal']
    state:
      groups: ['order', 'foodtech_order_minimal']
    events:
      groups: ['order']
    notes:
      groups: ['order', 'cart', 'order_update', 'foodtech_order_minimal']
    createdAt:
      groups: ['order']
    timeline:
      groups: ['order_timeline']
    preparationExpectedAt:
      groups: ['order']
    pickupExpectedAt:
      groups: ['order']
    reusablePackagingEnabled:
      groups: ['order', 'cart', 'order_update']
    reusablePackagingPledgeReturn:
      groups: ['order', 'cart', 'order_update']
    reusablePackagingQuantity:
      groups: ['order', 'cart', 'order_update']
    takeaway:
      groups: ['order', 'foodtech_order_minimal']
    fulfillmentMethod:
      groups: ['cart', 'order_update', 'foodtech_order_minimal']
    preparationTime:
      groups: ['order']
    shippingTime:
      groups: ['order']
    paymentMethod:
      groups: ['order', 'order_update', 'foodtech_order_minimal']
    hasEdenredCredentials:
      groups: ['cart', 'order', 'order_update']

Sylius\Component\Order\Model\OrderItem:
  attributes:
    id:
      groups: ['order', 'cart']
    quantity:
      groups: ['order', 'cart', 'pricing_deliveries', 'order_create']
    total:
      groups: ['order', 'cart', 'pricing_deliveries']
    unitPrice:
      groups: ['order', 'cart', 'pricing_deliveries']
    adjustments:
      groups: ['order', 'cart', 'pricing_deliveries']
    variant:
      groups: ['pricing_deliveries']

Sylius\Component\Order\Model\Adjustment:
  attributes:
    # FIXME
    # For an unknow reason, the id is NULL when normalized
    # id:
    #   groups: ['order', 'cart']
    label:
      groups: ['order', 'cart', 'pricing_deliveries']
    amount:
      groups: ['order', 'cart', 'pricing_deliveries']
    type:
      groups: ['order', 'cart', 'pricing_deliveries']

AppBundle\Entity\Sylius\OrderTimeline:
  attributes:
    preparationExpectedAt:
      groups: ['order_timeline']
    pickupExpectedAt:
      groups: ['order_timeline']
    dropoffExpectedAt:
      groups: ['order_timeline']

Sylius\Component\Product\Model\Product:
  attributes:
    id:
      groups: ['product']
    name:
      groups: ['product']
    description:
      groups: ['product']
    code:
      groups: ['product']
    enabled:
      groups: ['product', 'product_update']

Sylius\Component\Product\Model\ProductVariant:
  attributes:
    id:
      groups: []
    name:
      groups: ['pricing_deliveries']
    code:
      groups: ['pricing_deliveries']

Sylius\Component\Product\Model\ProductOption:
  attributes:
    name:
      groups: ['product_option']
    code:
      groups: ['product_option']
    values:
      groups: ['product_option']
    strategy:
      groups: ['product_option']
    additional:
      groups: ['product_option']
    valuesRange:
      groups: ['product_option']

Sylius\Component\Product\Model\ProductOptionValue:
  attributes:
    value:
      groups: ['product_option']
    code:
      groups: ['product_option']
    price:
      groups: ['product_option']
    enabled:
      groups: ['product_option', 'product_option_value_update']

AppBundle\DataType\NumRange:
  attributes:
    lower:
      groups: ['product_option']
    upper:
      groups: ['product_option']
    isUpperInfinite:
      groups: ['product_option']

AppBundle\Entity\LocalBusiness\FulfillmentMethod:
  attributes:
    type:
      groups: ['restaurant']
    openingHours:
      groups: ['restaurant']
    enabled:
      groups: ['restaurant']

AppBundle\Entity\Hub:
  attributes:
    name:
      groups: ['order', 'foodtech_order_minimal']
    address:
      groups: ['order']

AppBundle\Entity\Delivery\FailureReason:
  attributes:
    code:
      groups: ['task']
    description:
      groups: ['task']

Sylius\Component\Payment\Model\Payment:
  attributes:
    amount:
      groups: ['payment', 'order_configure_payment', 'payment_details']
    method:
      groups: ['payment', 'order_configure_payment', 'payment_details']

Sylius\Component\Payment\Model\PaymentMethod:
  attributes:
    code:
      groups: ['payment', 'order_configure_payment', 'payment_details']
