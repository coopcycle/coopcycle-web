name: E2E tests
on: push
env:
  APP_ENV: test
  NODE_ENV: test
jobs:
  E2E:
    name: Run end to end tests with cypress
    runs-on: ubuntu-latest
    env:
      GEOCODE_EARTH_API_KEY: ${{ secrets.GEOCODE_EARTH_API_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_CONNECT_CLIENT_ID: ${{ secrets.STRIPE_CONNECT_CLIENT_ID }}
      AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Europe/Paris"
      - uses: actions/checkout@v2
      - name: Run CoopCycle Web
        uses: ./.github/actions/run-coopcycle-web
        timeout-minutes: 10
      - name: Setup CoopCycle
        run: docker compose exec -T php bin/console coopcycle:setup --env=test
        # Install a cypress dependency directly to avoid installing everything from package.json
        # To make things easier to debug, make sure that the version is the same as the one in the root package.json
      - name: Install Cypress
        # Installing in the cypress directory to avoid conflicts with the root node_modules
        run: cd cypress && npm ci
      - name: Run Cypress
        uses: cypress-io/github-action@v6
        with:
          install: false
          working-directory: cypress
          # use /cypress as both working-directory and a project directory
          # (normally, project directory is working-directory/cypress)
          project: .
          config-file: ./cypress-e2e-ci.config.js
        # after the test run completes store videos and any screenshots
      - name: Upload images for failed tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
      - name: Show Symfony warnings on failure
        if: failure()
        uses: ./.github/actions/show-symfony-warnings
      - name: Upload Symfony logs on failure
        if: failure()
        uses: ./.github/actions/upload-symfony-logs
