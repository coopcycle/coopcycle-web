{% extends "base.html.twig" %}

{% set restaurant_edit_route = is_granted('ROLE_ADMIN') ? 'admin_restaurant' : 'dashboard_restaurant' %}
{% set restaurant_edit_url = path(restaurant_edit_route, { id: restaurant.id }) %}

{% form_theme cart_form 'form/cart.html.twig' %}

{% block structured_data %}
<script type="application/ld+json">
{{ restaurant|restaurant_microdata|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_UNESCAPED_SLASHES'))|raw }}
</script>
{% endblock %}

{% block banner %}

  {% set disabled_warning = ( not restaurant.enabled and (is_granted('ROLE_ADMIN') or is_granted('ROLE_RESTAURANT')) ) %}
  {% set preorder_warning = ( restaurant.isFulfillmentMethodEnabled('delivery') and restaurant.getFulfillmentMethod('delivery').orderingDelayMinutes > 0 ) %}
  {% set ordering_delay_warning = coopcycle_has_ordering_delay() %}

  {% if disabled_warning or preorder_warning or ordering_delay_warning %}
  <nav class="restaurant-banner {% if embed_context.enabled %}mt-0{% endif %}">
    <div class="alert alert-warning text-center">
      {% if disabled_warning %}
      <p class="mb-0">{{ 'restaurant.disabledWarning'|trans({ '%restaurantEditUrl%': restaurant_edit_url }) | raw }}</p>
      {% endif %}
      {% if preorder_warning %}
      <p class="mb-0">{{ 'restaurant.closedWarningWithDelay'|trans({
        '%delay%': restaurant.getFulfillmentMethod('delivery').orderingDelayMinutes|delay_for_humans(app.request.locale)
      }) }}</p>
      {% endif %}
      {% if ordering_delay_warning %}
      <p class="mb-0">ðŸ”¥Â {{ 'ordering_delay.disclaimer'|trans }}</p>
      {% endif %}
    </div>
  </nav>
  {% endif %}

{% endblock %}

{% block body %}
<div class="container">

  {% block restaurant_nav %}
    {% if not embed_context.enabled %}
    <div class="homepage-restaurants__show-more text-left mb-4">
      {% if restaurant.belongsToHub() %}
        <a class="restaurant-show-more" href="{{ path('hub', { id: restaurant.hub.id, slug: restaurant.hub.name|slugify }) }}">
          <i class="fa fa-arrow-left mr-2"></i>
          <span>{% trans %}index.view_all_merchants{% endtrans %}</span>
        </a>
      {% elseif restaurant.context == 'AppBundle\\Enum\\Store' %}
        <a class="restaurant-show-more" href="{{ path('stores') }}">
          <i class="fa fa-arrow-left mr-2"></i>
          <span>{% trans %}index.view_all_shops{% endtrans %}</span>
        </a>
      {% else %}
        <a class="restaurant-show-more" href="{{ path('restaurants') }}">
          <i class="fa fa-arrow-left mr-2"></i>
          <span>{% trans %}index.view_all_restaurants{% endtrans %}</span>
        </a>
      {% endif %}
    </div>
    {% endif %}
  {% endblock %}

  {#
  FIXME
  Calling restaurant.getNextOpeningDate() may throw Spatie\OpeningHours\Exceptions\MaximumLimitExceeded
  "No open date/time found in the next 366 days, use $openingHours->setDayLimit() to increase the limit."
  For example, set holidays for 2 years
  #}

  {% if not restaurant.isOpen %}
    {% set closingRule = restaurant.matchClosingRuleFor %}
    {% if closingRule is not empty %}
    <div class="alert alert-danger text-center">
      {% trans with { '%date%': closingRule.endDate|format_datetime('medium', 'none') } %}
      restaurant.temporaryClosedWarning
      {% endtrans %}
    </div>
    {% endif %}
  {% endif %}

  {% if restaurant.quotesAllowed %}
    {% set trans_params = {
      '%contact_us%': ('mailto:' ~ coopcycle_setting('administrator_email')),
      '%login%': path('nucleos_user_security_login')
    } %}
    {% if app.user %}
      {% if not app.user.quotesAllowed %}
        <div class="alert alert-info">
          <i class="fa fa-info-circle"></i>Â 
          {% trans with trans_params %}restaurant.quotes_disclaimer.authenticated{% endtrans %}
        </div>
      {% endif %}
    {% else %}
      <div class="alert alert-info">
        <i class="fa fa-info-circle"></i>Â 
        {% trans with trans_params %}restaurant.quotes_disclaimer.not_authenticated{% endtrans %}
      </div>
    {% endif %}
  {% endif %}

  <header class="restaurant-header">
    {% set restaurant_image = coopcycle_asset(restaurant, 'imageFile', 'restaurant_thumbnail') %}
    {% if restaurant_image is not empty %}
      <img class="restaurant-image" src="{{ restaurant_image }}">
    {% endif %}
    <section class="restaurant-header-body">
      <h1>{{ restaurant.name }}</h1>
      <p class="d-none d-lg-block">{{ restaurant.address.streetAddress }}, {{ restaurant.address.postalCode }}, {{ restaurant.address.addressLocality }}</p>
      {% if restaurant.website is defined and restaurant.website is not empty %}
      <p>
        <a href="{{ restaurant.website }}" target="_blank">
          <i class="fa fa-external-link"></i>Â {{ 'localBusiness.form.website'|trans }}
        </a>
      </p>
      {% endif %}
    </section>
    <section class="restaurant-header-right">
      <div class="d-flex justify-content-end">
        {% include 'restaurant/_partials/opening_hours.html.twig' with {
          delivery:   restaurant.isFulfillmentMethodEnabled('delivery')   ? restaurant.getOpeningHours('delivery')   : [],
          collection: restaurant.isFulfillmentMethodEnabled('collection') ? restaurant.getOpeningHours('collection') : []
        } %}
      </div>
    </section>
  </header>

  {% if restaurant.description is defined and restaurant.description is not empty %}
  <section class="restaurant-description text-muted d-none d-lg-block">
    {{ restaurant.description|markdown }}
  </section>
  {% endif %}

  {% if restaurant.menuTaxon is not null %}
  <div class="row">

    {#
    WARNING
    We cache the following block for performance
    Iterating through all products, optionsâ€¦ is a lot of database requests
    #}
    {% set cache_key = restaurant|cache_key(restaurant_menu_cache_annotation) %}
    {% cache cache_key ttl(300) %}
    <div class="col-xs-12 col-sm-8" id="menu">
      <div class="restaurant-menu-wrapper">
      {% for child in restaurant.menuTaxon.children %}
        {% if child.products|length > 0 %}
        <h2>{{ child.name }}</h2>
        {% if child.description is not empty %}
        <p class="text-muted">{{ child.description }}</p>
        {% endif %}
        <div class="restaurant-menu-section">
          {% for product in child.products %}
            {# TODO Skip if no variant is defined #}
            {% if not product.enabled %}
              <div class="restaurant-menu-section-item">
                <a class="menu-item menu-item--unavailable">
                  {% include '_partials/restaurant/menu_item_inner.html.twig' %}
                </a>
              </div>
            {% else %}
              {% set product_images = [] %}
              {% set images_16x9 = product.images|filter(image => image.ratio == '16:9') %}
              {% if images_16x9|length > 0 %}
                {% set product_images_filtered = images_16x9 %}
              {% else %}
                {% set product_images_filtered = product.images|filter(image => image.ratio == '1:1') %}
              {% endif %}
              {% for product_image in product_images_filtered %}
                {% set imagine_filter = ('product_thumbnail_' ~ (product_image.ratio|replace({ ':': 'x' }))) %}
                {#
                FIXME
                Since we are using a S3 backed CDN, each call to the coopcycle_asset filter,
                (which in turn calls Liip\ImagineBundle\Imagine\Cache\CacheManager::getBrowserPath()),
                generates a HTTP call to S3 to check if the thumbnail exists.

                Until a user opens the popup to generate the thumbnails, these calls will return 404.
                It may generate too many API calls, and "HTTP 503 Slow Down" errors.

                This is why we set the 4th parameter to true, to *ALWAYS* return the filter URL.
                #}
                {% set product_images = product_images|merge([ coopcycle_asset(product_image, 'imageFile', imagine_filter, true, true) ]) %}
              {% endfor %}
              {% if not product.hasOptions() %}
              <div class="restaurant-menu-section-item">
                {% if product_images|length > 1 %}
                  <button class="menu-item" type="button"
                    data-modal="details"
                    data-product-name="{{ product.name|e('html_attr') }}"
                    data-product-images="{{ product_images|json_encode|e('html_attr') }}"
                    data-product-price="{{ (product|sylius_resolve_variant).price|e('html_attr') }}"
                    data-form-action="{{ path('restaurant_add_product_to_cart', { id: restaurant.id, code: product.code }) }}">
                    {% include '_partials/restaurant/menu_item_inner.html.twig' %}
                  </button>
                {% else %}
                  <form method="post"
                    action="{{ path('restaurant_add_product_to_cart', { id: restaurant.id, code: product.code }) }}"
                    data-product-simple>
                    <button class="menu-item" type="submit">
                      {% include '_partials/restaurant/menu_item_inner.html.twig' %}
                    </button>
                  </form>
                {% endif %}
              </div>
              {% else %}
              <div class="restaurant-menu-section-item">
                <button
                  class="menu-item"
                  data-modal="options"
                  data-form-action="{{ path('restaurant_add_product_to_cart', { id: restaurant.id, code: product.code })|e('html_attr') }}"
                  data-product-code="{{ product.code|e('html_attr') }}"
                  data-product-name="{{ product.name|e('html_attr') }}"
                  data-product-images="{{ product_images|json_encode|e('html_attr') }}"
                  data-product-price="{{ (product|sylius_resolve_variant).price|e('html_attr') }}"
                  data-product-options="{{ product.options|coopcycle_normalize('AppBundle\\Entity\\Sylius\\ProductOption', ['product_option'], 'json')|json_encode|e('html_attr') }}">
                  {% include '_partials/restaurant/menu_item_inner.html.twig' %}
                </button>
              </div>
              {% endif %}
            {% endif %}
          {% endfor %}
        </div>
        {% endif %}
      {% endfor %}
      </div>
    </div>
    {% endcache %}

    {% if restaurant.isFulfillmentMethodEnabled('delivery') or restaurant.isFulfillmentMethodEnabled('collection') %}
    <div class="col-xs-12 col-sm-4">
      {{ form_start(cart_form, { attr: { 'data-cart-url': path('restaurant_cart', { id: restaurant.id }) } }) }}
        <div id="cart"></div>
      {{ form_end(cart_form) }}
    </div>
    {% else %}
      <div class="col-xs-12 col-sm-4">
        <div class="alert alert-warning">
          {% trans from 'validators' %}order.fulfillment_methods.empty{% endtrans %}
        </div>
      </div>
    {% endif %}

  </div>

  {% else %}
    <div class="alert alert-warning">
      {% trans %}restaurant.noMenuWarning{% endtrans %}
    </div>
  {% endif %}

</div>

{% set restaurant_json = { id: restaurant.id } %}
{% set cart = cart_provider.getCart() %}
{% set cart_json = cart_provider.normalize(cart) %}

<div id="js-restaurant-data"
  data-restaurant="{{ restaurant_json|json_encode|e('html_attr') }}"
  data-cart="{{ cart_json|json_encode|e('html_attr') }}"
  data-times="{{ times|json_encode|e('html_attr') }}"></div>

<div id="js-addresses-data"
  data-addresses="{{ addresses_normalized|json_encode|e('html_attr') }}"></div>

{% endblock %}

{% block styles %}
{{ encore_entry_link_tags('restaurant') }}
{% endblock %}

{% block scripts %}
{{ encore_entry_script_tags('restaurant') }}
{% endblock %}
