{% set invitationLink = invitation_link_provider.getInvitationLink() %}

<div class="form rounded-bottom">
  {% if title is defined %}
    <h5>{{ title|trans }}</h5>
  {% endif %}

  <div class="form-group">
    <label class="control-label">{{ 'registration.step.invitation.copy.link'|trans }}</label>
    <div class="input-group" data-toggle="copy" data-clipboard-text="{{ invitationLink }}">
      <span class="input-group-addon bg-primary"><i class="fa fa-link fa-rotate-90 text-white"></i></span>
      <input type="text" class="form-control" value="{{ invitationLink }}">
    </div>
    <div class="d-flex justify-content-end mt-3">
    <button id="copy-button" type="button" class="btn btn-primary" data-toggle="copy" data-clipboard-text="{{ invitationLink }}">
      <i class="fa fa-copy mr-2"></i>
      {{ 'registration.step.invitation.copy.button'|trans }}
      </button>
    </div>
  </div>
</div>

{% block scripts %}
  {{ encore_entry_script_tags('common') }}

  <script>
    const clipboard = new ClipboardJS('[data-toggle="copy"]');

    clipboard.on('success', function(e) {
      copyFeedback(document.getElementById('copy-button'))
    });

    function copyFeedback(el) {
      const iconClass = el.childNodes[1].className
      const text = el.childNodes[2].nodeValue

      el.childNodes[1].className = 'fa fa-check mr-2'
      el.childNodes[2].nodeValue = "{{ 'registration.step.invitation.link.copied'|trans }}"

      resetValues(el, iconClass, text)
    }

    function resetValues(el, iconClass, text) {
      setTimeout(() => {
        el.childNodes[1].className = iconClass
        el.childNodes[2].nodeValue = text
      }, 1000)
    }
  </script>
{% endblock %}
