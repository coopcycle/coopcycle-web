@mixin form-control-focus($color: $input-border-focus) {
  $color-rgba: rgba(red($color), green($color), blue($color), .6);
  &:focus {
    border-color: $color;
    outline: 0;
    @include box-shadow(inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px $color-rgba);
  }
}

.form-control {
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  @include box-shadow(inset 0 1px 1px rgba(0, 0, 0, .075));
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus;

  // Placeholder
  //@include placeholder;

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }

  // [converter] extracted textarea& to textarea.form-control
}

.address-autosuggest {

  &__container {
    margin-bottom: $form-group-margin-bottom;
  }

  &__input-wrapper {
    display: flex;
    position: relative;

    &:before {
      font-family: 'FontAwesome';
      content: '\F041';
      color: white;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;

      font-size: 22px;
      text-align: center;
      width: $input-height-base;
      line-height: $input-height-base;
      background-color: $main-blue;

      border-top-left-radius: $input-border-radius;
      border-bottom-left-radius: $input-border-radius;
    }
  }

  &__input {
    @extend .form-control;
    text-indent: $input-height-base;
    padding-right: $input-height-base;
    &--addon {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }

  &__clear {
    position: absolute;
    right: 0;
    top: 0;
  }

  &__close-button {
    border: none;
    background-color: transparent;
    font-size: $font-size-large;
    cursor: pointer;
    height: 100%;
    width: $input-height-base;
  }

  &__section-title {
    padding: 5px 10px;
  }

  &__suggestions-container {

    $suggestions-container: &;

    &__footer {
      display: none;
      justify-content: flex-end;
      padding: 4px;
      img {
        display: inline-block;
      }
    }

    &--open {
      #{$suggestions-container}__footer {
        display: flex;
      }
    }
  }

  &__addon {
    background-color: $main-blue;
    display: flex;
    align-items: center;
    padding-left: 12px;
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    > span {
      white-space: nowrap;
      font-size: 12px;
      font-weight: 700;
      color: white;
    }
  }

}

.has-error {
  .address-autosuggest {
    &__input-wrapper {
      &:before {
        background-color: $state-danger-text;
      }
    }
  }
}

.form-group-sm {
  .address-autosuggest {
    &__input-wrapper {
      &:before {
        font-size: 18px;
      }
    }
  }
}
