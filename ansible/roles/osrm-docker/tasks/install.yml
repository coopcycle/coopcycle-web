---

- name: install dependencies
  become: yes
  apt: pkg={{ item }} state=latest
  with_items:
    - python-dev
    - python-pip

- name: install docker-py
  pip:
    name: docker-py

- name: make sure directory exists
  file:
    path: "{{ osrm_server.root_dir }}"
    state: directory
    mode: 0755

- debug:
    var: osrm_server.root_dir

- name: check if PBF file is present
  stat: path={{ osrm_server.root_dir }}/data.osm.pbf
  register: pbf_file

- name: check if the Road Network is extracted
  stat: path={{ osrm_server.root_dir }}/data.osrm
  register: osrm_file

- name: check if the Hierarchy is created
  stat: path={{ osrm_server.root_dir }}/data.osrm.core
  register: osrm_core_file

- name: extract the Road Network
  when: pbf_file.stat.exists == True and osrm_file.stat.exists == False
  docker_container:
    name: "osrm_{{ osrm_server.name }}"
    image: osrm/osrm-backend
    state: started
    restart: yes
    volumes:
      - "{{ osrm_server.root_dir }}:/data"
    ports:
      - "{{ osrm_server.port }}:{{ osrm_server.port }}"
    command: "osrm-extract -p /opt/bicycle.lua /data/data.osm.pbf"

- name: create the Hierarchy
  when: pbf_file.stat.exists == True and osrm_core_file.stat.exists == False
  docker_container:
    name: "osrm_{{ osrm_server.name }}"
    image: osrm/osrm-backend
    state: started
    restart: yes
    volumes:
      - "{{ osrm_server.root_dir }}:/data"
    ports:
      - "{{ osrm_server.port }}:{{ osrm_server.port }}"
    command: "osrm-contract /data/data.osrm"

- name: start server
  docker_container:
    name: "osrm_{{ osrm_server.name }}"
    image: osrm/osrm-backend
    state: started
    restart: yes
    volumes:
      - "{{ osrm_server.root_dir }}:/data"
    ports:
      - "{{ osrm_server.port }}:{{ osrm_server.port }}"
    command: "osrm-routed -p {{ osrm_server.port }} /data/data.osrm"
