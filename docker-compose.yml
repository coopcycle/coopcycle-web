version: '3'

services:

  postgres:
    restart: always
    image: mdillon/postgis:9.4-alpine
    environment:
      POSTGRES_DB: coopcycle
    ports:
      - '5432:5432'
    volumes:
      - 'pg_data:/var/lib/postgresql/data'

  redis:
    restart: always
    image: redis:alpine
    ports:
      - '6379:6379'

  nodejs:
    build:
      dockerfile: './docker/nodejs/Dockerfile'
      context: '.'
    depends_on:
      - postgres
      - redis
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8002:8002'
    volumes:
      - 'node_modules:/srv/coopcycle/node_modules'
      - './:/srv/coopcycle:cached'

  webpack:
    build:
      dockerfile: './docker/webpack/Dockerfile'
      context: '.'
    ports:
      - '8080:8080'
    volumes:
      - 'node_modules:/srv/coopcycle/node_modules'
      - './:/srv/coopcycle:cached'

  osrm:
    build: './docker/osrm'
    ports:
      - '5000:5000'
    volumes:
      - './var/osrm:/data'
    environment:
      OSRM_FILENAME: data.osrm

  php:
    build:
      dockerfile: './docker/php/Dockerfile'
      context: '.'
    depends_on:
      - postgres
      - redis
      - osrm
      - graphite
      - stripe_mock
    links:
      - osrm
      - graphite
      - stripe_mock
    environment:
      SYMFONY_ENV: 'dev'
    volumes:
      - 'php_cache:/srv/coopcycle/var/cache'
      - './:/srv/coopcycle:cached'

  nginx:
    image: 'nginx:1.11-alpine'
    depends_on:
      - php
      - nodejs
    ports:
      - '80:80'
    volumes:
      - './docker/nginx/conf.d:/etc/nginx/conf.d:ro'
      - './web:/srv/coopcycle/web:ro'

  smtp:
    image: namshi/smtp
    ports:
      - 25:25

  graphite:
    restart: always
    image: graphiteapp/graphite-statsd:latest
    ports:
      - '7000:80'
      - '2003-2004:2003-2004'
      - '2023-2024:2023-2024'
      - '8125:8125/udp'
      - '8126:8126'

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    depends_on:
      - graphite
    links:
      - graphite

  stripe_mock:
    image: stripemock/stripe-mock:latest
    ports:
      - '12111:12111'

  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  node_modules:
  pg_data:
  php_cache:
  portainer_data:
