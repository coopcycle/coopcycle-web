include:
  - user_admin.yml
  - user_dispatcher.yml
  - user_courier.yml
  - addresses.yml
  - packages.yml

AppBundle\Entity\Base\GeoCoordinates:
  geo_warehouse:
    __construct: [ "48.8758311", "2.3675732" ]
  geo_client_1:
    __construct: [ "48.8638614", "2.3762269" ]

AppBundle\Entity\Delivery\PricingRuleSet:
  pricing_rule_set_1:
    name: Default
    rules: [ '@pricing_rule_1' ]
  pricing_rule_set_2:
    name: Multiple rules per order
    strategy: 'map'
    rules: [ '@pricing_rule_21', '@pricing_rule_22' ]

AppBundle\Entity\Delivery\PricingRule:
  pricing_rule_1:
    expression: 'distance \> 0'
    price: 499
    position: 1
    ruleSet: '@pricing_rule_set_1'
  pricing_rule_21:
    expression: 'task.type == "PICKUP"'
    price: 499
    target: 'TASK'
    position: 0
    ruleSet: '@pricing_rule_set_2'
  pricing_rule_22:
    expression: 'task.type == "DROPOFF"'
    price: 200
    target: 'TASK'
    position: 1
    ruleSet: '@pricing_rule_set_2'

AppBundle\Entity\TimeSlot:
  time_slot_1:
    name: 'Acme time slot'
    openingHours:
      - 'Mo-Su 00:00-11:59'
      - 'Mo-Su 12:00-23:59'

AppBundle\Entity\Address:
  warehouse:
    name: 'Warehouse'
    contactName: 'John Doe'
    telephone: <identity(\libphonenumber\PhoneNumberUtil::getInstance()->parse('+33112121212'))>
    addressLocality: 'Paris'
    postalCode: '75001'
    streetAddress: '23, Avenue Claude Vellefaux, 75010 Paris, France'
    geo: "@geo_warehouse"
  client_1:
    name: 'Office'
    contactName: 'Jane smith'
    telephone: <identity(\libphonenumber\PhoneNumberUtil::getInstance()->parse('+33112121414'))>
    addressLocality: 'Paris'
    postalCode: '75009'
    streetAddress: '72, Rue Saint-Maur, 75011 Paris, France'
    geo: "@geo_client_1"

AppBundle\Entity\Store:
  store_1:
    name: 'Acme'
    address: "@address_1"
    enabled: true
    pricingRuleSet: '@pricing_rule_set_1'
    timeSlot: '@time_slot_1'
    timeSlots:
      - '@time_slot_1'
    packageSet: '@package_set_1'
    __calls:
      - addAddress: [ "@warehouse" ]
      - addAddress: [ "@client_1" ]

  store_2:
    name: 'Acme without pricing'
    address: "@address_1"
    enabled: true
    timeSlot: '@time_slot_1'
    timeSlots:
      - '@time_slot_1'
    __calls:
      - addAddress: [ "@warehouse" ]
      - addAddress: [ "@client_1" ]

  store_{3..50}:
    name: '<company()>'
    address: "@address_1"
    enabled: true
    pricingRuleSet: '@pricing_rule_set_2'
    timeSlot: '@time_slot_1'
    timeSlots:
      - '@time_slot_1'
    __calls:
      - addAddress: [ "@warehouse" ]
      - addAddress: [ "@client_1" ]

AppBundle\Entity\Delivery:
  delivery_{1..250}:
    __factory:
      createWithAddress:
        - "@warehouse"
        - "@client_1"
    __calls:
      - setPickupRange:
          - <identity(new \DateTime('today 18:00:00'))>
          - <identity(new \DateTime('today 18:30:00'))>
      - setDropoffRange:
          - <identity(new \DateTime('today 19:00:00'))>
          - <identity(new \DateTime('today 19:30:00'))>
    store: "@store_1"

  delivery_{251..1000}:
    __factory:
      createWithAddress:
        - "@warehouse"
        - "@client_1"
    __calls:
      - setPickupRange:
          - <identity(new \DateTime('today 18:00:00'))>
          - <identity(new \DateTime('today 18:30:00'))>
      - setDropoffRange:
          - <identity(new \DateTime('today 19:00:00'))>
          - <identity(new \DateTime('today 19:30:00'))>
    store: '@store_<numberBetween(2, 50)>'

AppBundle\Entity\Sylius\Order:
  order_{1..1000}:
    __factory:
      '@sylius.factory.order::createForDelivery':
        - "@delivery_<current()>"
    __calls:
      # FIXME: this does not set an order number on each task (normally it's handled by OrderSubscriber)
      # but doing so inside DeliveryOrderProcessor (via OrderManager.onDemand) is too slow
      - setNumber: [ "A<current()>" ]
      - setState: [ 'new' ]
    # The rest of initialization is done by DeliveryOrderProcessor
