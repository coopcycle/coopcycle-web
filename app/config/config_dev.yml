imports:
    - { resource: config.yml }

framework:
    router:
        resource: "%kernel.project_dir%/app/config/routing_dev.yml"
        strict_requirements: true
    profiler: { only_exceptions: false }
    session:
        save_path:   "/tmp"

# Uncomment to send emails in dev
# parameters:
#     nucleos_profile.registration.confirmation.enabled: true

web_profiler:
    toolbar: true
    intercept_redirects: false

monolog:
    # channels to use with autowire are configured in config.yml
    # https://symfony.com/doc/current/logging/channels_handlers.html#how-to-autowire-logger-channels
    handlers:
        main:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/%kernel.environment%.log"
            level: debug
            max_files: 3
            channels: ["!event", "!snc_redis", "!api", "!stripe", "!loopeat"]
        console:
            type:   console
            channels: ["!event", "!doctrine"]
        redis:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/redis.%kernel.environment%.log"
            level: debug
            max_files: 3
            channels: [ snc_redis ]
        api:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/api.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [api]
        fee_calculation:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/fee_calculation.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [fee_calculation]
        timing:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/timing.%kernel.environment%.log"
            level: debug
            max_files: 3
            channels: [timing]
        checkout:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/checkout.%kernel.environment%.log"
            level: debug
            max_files: 3
            channels: [ checkout, coopcycle.order_processing ]
        geofencing:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/geofencing.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [geofencing]
        push_notification:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/push_notification.%kernel.environment%.log"
            level: debug
            max_files: 3
            channels: [ push_notification ]
        real_time_message:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/real_time_message.%kernel.environment%.log"
            level: debug
            max_files: 3
            channels: [ real_time_message ]
        stripe:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/stripe.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [stripe]
        loopeat:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/loopeat.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [loopeat]
        urbantz:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/urbantz.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [urbantz]
        dabba:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/dabba.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [dabba]
        edenred:
            type: rotating_file
            path: "%env(APP_LOG_DIR)%/edenred.%kernel.environment%.log"
            level: info
            max_files: 3
            channels: [edenred]
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type:   firephp
        #    level:  info
        #chromephp:
        #    type:   chromephp
        #    level:  info

nelmio_cors:
    defaults:
        allow_origin:   ["%cors_allow_origin%", "http://localhost:6006"]
