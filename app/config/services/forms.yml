services:

  _defaults:
    autowire: true
    autoconfigure: true

  AppBundle\Spreadsheet\TaskSpreadsheetParser:
    arguments:
      $countryCode: '%country_iso%'

  AppBundle\Spreadsheet\DeliverySpreadsheetParser:
    arguments:
      $countryCode: '%country_iso%'

  AppBundle\Spreadsheet\ProductSpreadsheetParser: ~

  AppBundle\Form\ApiRegistrationType:
    arguments: ['%country_iso%']
    tags:
      - { name: form.type, alias: app_user_api_registration }

  AppBundle\Form\RegistrationType:
    arguments:
      $isDemo: '%is_demo%'
    tags:
      - { name: form.type }

  AppBundle\Form\UpdateProfileType:
    arguments: [ '@security.token_storage', '@translator', '%country_iso%' ]
    tags:
      - { name: form.type, alias: app_update_profile }

  AppBundle\Form\AddressType:
    arguments:
      $country: '%country_iso%'
    tags:
      - { name: form.type }

  AppBundle\Form\DeliveryAddressType:
    arguments: [ '@translator', '%country_iso%' ]
    tags:
      - { name: form.type }

  AppBundle\Form\DeliveryType:
    arguments:
      $routing: '@routing_service'
      $translator: '@translator'
      $authorizationChecker: '@security.authorization_checker'
      $country: '%country_iso%'
      $locale: '%env(COOPCYCLE_LOCALE)%'
    tags: [ form.type ]

  AppBundle\Form\DeliveryEmbedType:
    parent: AppBundle\Form\DeliveryType
    autowire: false
    autoconfigure: false
    tags: [ form.type ]

  AppBundle\Form\NewOrderType:
    parent: AppBundle\Form\DeliveryType
    autowire: false
    autoconfigure: false
    tags: [ form.type ]

  AppBundle\Form\OrderType:
    arguments: [ '@sm.factory', '@security.authorization_checker' ]
    tags: [ form.type ]

  AppBundle\Form\TaskUploadType:
    tags: [ form.type ]

  AppBundle\Form\AddUserType:
    arguments: [ '@doctrine' ]
    tags: [ form.type ]

  AppBundle\Form\PaymentType:
    arguments: [ '@sm.factory', '@security.authorization_checker' ]
    tags: [ form.type ]

  AppBundle\Form\TaskExportType:
    arguments: [ '@coopcycle.repository.task' ]
    tags: [ form.type ]

  AppBundle\Form\SettingsType:
    arguments:
      $country: '%country_iso%'
      $isDemo: '%is_demo%'
      $debug: '%kernel.debug%'
    tags: [ form.type ]

  AppBundle\Form\TaskType:
    arguments:
      $country: '%country_iso%'
    tags: [ form.type ]

  AppBundle\Form\RestaurantType:
    arguments:
      $country: '%country_iso%'
      $debug: '%kernel.debug%'
    tags: [ form.type ]

  AppBundle\Form\StoreType:
    arguments:
      $country: '%country_iso%'
    tags: [ form.type ]

  AppBundle\Form\MenuEditor\TaxonProductType:
    arguments: [ '@sylius.repository.product' ]
    tags: [ form.type ]

  AppBundle\Form\ProductType:
    arguments:
      $productAttributeRepository: '@sylius.repository.product_attribute'
      $productAttributeValueFactory: '@sylius.factory.product_attribute_value'
      $taxIncl: '%env(bool:COOPCYCLE_TAX_INCL)%'
    tags: [ form.type ]

  AppBundle\Form\Checkout\CheckoutAddressType:
    arguments:
      $loopeatOAuthFlow: '%env(LOOPEAT_OAUTH_FLOW)%'
    tags: [ form.type ]

  AppBundle\Form\Checkout\CheckoutCustomerType:
    arguments:
      $customerRepository: '@sylius.repository.customer'
    tags: [ form.type ]

  AppBundle\Form\ApiAppType:
    tags: [ form.type ]

  AppBundle\Form\MaintenanceType:
    arguments:
      - '@snc_redis.default'
    tags: [ form.type ]

  AppBundle\Form\AddressBookType:
    tags: [ form.type ]

  sylius.form.extension.type.promotion_coupon:
    class: AppBundle\Form\Extension\PromotionCouponTypeExtension
    tags:
      - { name: form.type_extension, extended_type: Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponType }

  sylius.form.type.promotion_rule.premium_customer_configuration:
    class: AppBundle\Form\Sylius\Promotion\Rule\IsCustomerConfigurationType
    tags:
        - { name: form.type }

  AppBundle\Form\Order\CartType:
    tags: [ form.type ]

  AppBundle\Form\Type\TimeSlotChoiceType:
    arguments:
      $country: '%country_iso%'
      $locale: '%env(COOPCYCLE_LOCALE)%'
    tags: [ form.type ]

  AppBundle\Form\Type\MoneyType:
    tags: [ form.type ]

  AppBundle\Form\DeliveryImportType:
    tags: [ form.type ]

  AppBundle\Form\ProductOptionWithPositionType:
    tags: [ form.type ]

  AppBundle\Form\TimeSlotType:
    tags: [ form.type ]

  AppBundle\Form\OrderExportType:
    tags: [ form.type ]

  AppBundle\Form\Type\LocalBusinessTypeChoiceType:
    tags: [ form.type ]

  AppBundle\Form\Sylius\Promotion\OfferDeliveryType:
    arguments:
      $promotionRuleFactory: '@sylius.factory.promotion_rule'
    tags: [ form.type ]

  AppBundle\Form\Sylius\Promotion\ItemsTotalBasedPromotionType:
    arguments:
      $promotionRuleFactory: '@sylius.factory.promotion_rule'
    tags: [ form.type ]

  AppBundle\Form\Checkout\CheckoutPaymentType:
    tags: [ form.type ]

  AppBundle\Form\Type\PriceWithTaxType:
    tags: [ form.type ]
    arguments:
      $taxIncl: '%env(bool:COOPCYCLE_TAX_INCL)%'

  AppBundle\Form\CustomizeType:
    arguments:
      $assetsFilesystem: '@assets_filesystem'
    tags: [ form.type ]

  AppBundle\Form\Type\ProductTaxCategoryChoiceType:
    arguments:
      $taxCategoryRepository: '@sylius.repository.tax_category'
      $country: '%region_iso%'
      $legacyTaxes: '%env(bool:COOPCYCLE_LEGACY_TAXES)%'
    tags: [ form.type ]

  AppBundle\Form\Restaurant\FulfillmentMethodType:
    tags: [ form.type ]

  AppBundle\Form\TagsType:
    tags: [ form.type ]

  AppBundle\Form\AttachToOrganizationType:
    tags: [ form.type ]

  AppBundle\Form\Type\PhoneNumberType:
    arguments:
      $country: '%region_iso%'
    tags: [ form.type ]

  AppBundle\Form\Type\LegalType:
    tags: [ form.type ]

  AppBundle\Form\HubType:
    tags: [ form.type ]

  AppBundle\Form\Checkout\ChargeStripeSourceType:
    tags: [ form.type ]
