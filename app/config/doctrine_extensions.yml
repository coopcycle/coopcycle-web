# services to handle doctrine extensions
# import it in config.yml
services:
    # KernelRequest listener
    # extension.listener:
    #     class: Acme\DemoBundle\Listener\DoctrineExtensionListener
    #     calls:
    #         - [ setContainer, [ "@service_container" ] ]
    #     tags:
    #         # translatable sets locale after router processing
    #         - { name: kernel.event_listener, event: kernel.request, method: onLateKernelRequest, priority: -10 }
    #         # loggable hooks user username if one is in security context
    #         - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    #         # translatable sets locale such as default application locale before command execute
    #         - { name: kernel.event_listener, event: console.command, method: onConsoleCommand, priority: -10 }


    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    # gedmo.listener.translatable:
    #     class: Gedmo\Translatable\TranslatableListener
    #     tags:
    #         - { name: doctrine.event_subscriber, connection: default }
    #     calls:
    #         - [ setAnnotationReader, [ "@annotation_reader" ] ]
    #         - [ setDefaultLocale, [ %locale% ] ]
    #         - [ setTranslationFallback, [ false ] ]

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    coopcycle.listener.post_soft_delete:
        class: AppBundle\Doctrine\EventSubscriber\PostSoftDeleteSubscriber
        tags:
            - { name: doctrine.event_subscriber }

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    postgis.event_subscriber:
        class: AppBundle\Doctrine\PostGIS\ORMSchemaEventSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    ignore_tables.event_subscriber:
        class: AppBundle\Doctrine\EventSubscriber\IgnoreTablesSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    # gedmo.listener.loggable:
    #     class: Gedmo\Loggable\LoggableListener
    #     tags:
    #         - { name: doctrine.event_subscriber, connection: default }
    #     calls:
    #         - [ setAnnotationReader, [ "@annotation_reader" ] ]
