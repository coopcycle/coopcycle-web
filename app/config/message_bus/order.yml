services:

  _defaults:
    autowire: false
    autoconfigure: false
    public: true

  coopcycle.domain.event_store:
    public: false
    class: AppBundle\Domain\EventStore
    arguments:
      - '@security.token_storage'
      - '@request_stack'

  coopcycle.domain.middleware.event_store:
    public: false
    class: AppBundle\Domain\Middleware\EventStoreMiddleware
    arguments:
      - '@coopcycle.domain.event_store'
    tags:
      - { name: event_bus_middleware, priority: -255 }

  #
  # Command Handlers
  #

  coopcycle.domain.order.handler.checkout:
    class: AppBundle\Domain\Order\Handler\CheckoutHandler
    arguments:
      - '@event_recorder'
      - '@sylius.order_number_assigner'
      - '@AppBundle\Payment\Gateway'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\Checkout

  coopcycle.domain.order.handler.quote:
    class: AppBundle\Domain\Order\Handler\QuoteHandler
    arguments:
      - '@event_recorder'
      - '@sylius.order_number_assigner'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\Quote

  coopcycle.domain.order.handler.accept_order:
    class: AppBundle\Domain\Order\Handler\AcceptOrderHandler
    arguments:
      - '@event_recorder'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\AcceptOrder

  coopcycle.domain.order.handler.refuse_order:
    class: AppBundle\Domain\Order\Handler\RefuseOrderHandler
    arguments:
      - '@coopcycle.stripe_manager'
      - '@event_recorder'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\RefuseOrder

  coopcycle.domain.order.handler.cancel_order:
    class: AppBundle\Domain\Order\Handler\CancelOrderHandler
    arguments:
      - '@event_recorder'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\CancelOrder

  coopcycle.domain.order.handler.on_demand:
    class: AppBundle\Domain\Order\Handler\OnDemandHandler
    arguments:
      - '@event_recorder'
      - '@sylius.order_number_assigner'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\OnDemand

  coopcycle.domain.order.handler.delay_order:
    class: AppBundle\Domain\Order\Handler\DelayOrderHandler
    arguments:
      - '@event_recorder'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\DelayOrder

  coopcycle.domain.order.handler.refund:
    class: AppBundle\Domain\Order\Handler\RefundHandler
    arguments:
      - '@coopcycle.stripe_manager'
      - '@sm.factory'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\Refund

  coopcycle.domain.order.handler.fulfill:
    class: AppBundle\Domain\Order\Handler\FulfillHandler
    arguments:
      - '@event_recorder'
    tags:
      - name: command_handler
        handles: AppBundle\Domain\Order\Command\Fulfill

  #
  # Event Reactors
  #

  coopcycle.domain.order.reactor.create_tasks:
    class: AppBundle\Domain\Order\Reactor\CreateTasks
    arguments:
      - '@coopcycle.delivery.manager'
      - '@coopcycle.utils.order_text_encoder'
    tags:
        - name: event_subscriber
          subscribes_to: order:accepted

  coopcycle.domain.order.reactor.cancel_tasks:
    class: AppBundle\Domain\Order\Reactor\CancelTasks
    arguments:
      - '@coopcycle.task_manager'
    tags:
        - name: event_subscriber
          subscribes_to: order:cancelled

  coopcycle.domain.order.reactor.send_email:
    class: AppBundle\Domain\Order\Reactor\SendEmail
    arguments:
      - '@coopcycle.email_manager'
      - '@coopcycle.settings_manager'
      - '@event_bus'
      - '@Symfony\Component\Messenger\MessageBusInterface'
    tags:
        - name: event_subscriber
          subscribes_to: order:created
        - name: event_subscriber
          subscribes_to: order:accepted
        - name: event_subscriber
          subscribes_to: order:refused
        - name: event_subscriber
          subscribes_to: order:cancelled
        - name: event_subscriber
          subscribes_to: order:delayed
        - name: event_subscriber
          subscribes_to: order:fulfilled

  coopcycle.domain.order.reactor.send_remote_push_notification:
    class: AppBundle\Domain\Order\Reactor\SendRemotePushNotification
    arguments:
      - '@nucleos_user.user_manager'
      - '@messenger.default_bus'
      - '@api_platform.iri_converter'
      - '@translator'
    tags:
        - name: event_subscriber
          subscribes_to: order:created
        - name: event_subscriber
          subscribes_to: order:accepted

  coopcycle.domain.order.reactor.clear_session:
    class: AppBundle\Domain\Order\Reactor\ClearSession
    arguments:
      - '@session'
      - '%sylius_cart_restaurant_session_key_name%'
    tags:
        - name: event_subscriber
          subscribes_to: order:checkout_succeeded

  coopcycle.domain.order.reactor.pick_or_drop:
    class: AppBundle\Domain\Order\Reactor\PickOrDrop
    arguments:
      - '@event_bus'
    tags:
        - name: event_subscriber
          subscribes_to: task:done

  coopcycle.domain.order.reactor.capture_payment:
    class: AppBundle\Domain\Order\Reactor\CapturePayment
    arguments:
      - '@AppBundle\Payment\Gateway'
      - '@logger'
    tags:
        - name: event_subscriber
          subscribes_to: order:fulfilled
        - name: event_subscriber
          subscribes_to: order:cancelled

  coopcycle.domain.order.reactor.calculate_timeline:
    class: AppBundle\Domain\Order\Reactor\CalculateTimeline
    arguments:
      - '@coopcycle.order_timeline_calculator'
    tags:
        - name: event_subscriber
          subscribes_to: order:created
        - name: event_subscriber
          subscribes_to: order:delayed
        - name: event_subscriber
          subscribes_to: order:picked
        - name: event_subscriber
          subscribes_to: order:dropped

  coopcycle.domain.order.reactor.add_customer_address:
    class: AppBundle\Domain\Order\Reactor\AddCustomerAddress
    tags:
        - name: event_subscriber
          subscribes_to: order:created

  coopcycle.domain.order.reactor.enhance_shipping_address:
    class: AppBundle\Domain\Order\Reactor\EnhanceShippingAddress
    arguments:
      - '@libphonenumber\PhoneNumberUtil'
    tags:
        - name: event_subscriber
          subscribes_to: order:created

  coopcycle.domain.order.reactor.publish_live_update:
    class: AppBundle\Domain\Order\Reactor\PublishLiveUpdate
    arguments:
      - '@AppBundle\Service\LiveUpdates'
    tags:
        - name: event_subscriber
          subscribes_to: order:created
        - name: event_subscriber
          subscribes_to: order:accepted
        - name: event_subscriber
          subscribes_to: order:refused
        - name: event_subscriber
          subscribes_to: order:delayed
        - name: event_subscriber
          subscribes_to: order:cancelled
        - name: event_subscriber
          subscribes_to: order:picked
        - name: event_subscriber
          subscribes_to: order:dropped
        - name: event_subscriber
          subscribes_to: order:fulfilled

  coopcycle.domain.order.reactor.modify_promotions_usage:
    class: AppBundle\Domain\Order\Reactor\ModifyPromotionsUsage
    arguments:
      - '@AppBundle\Service\LiveUpdates'
    tags:
        - name: event_subscriber
          subscribes_to: order:created
        - name: event_subscriber
          subscribes_to: order:cancelled

  coopcycle.domain.order.reactor.grab_loopeats:
    class: AppBundle\Domain\Order\Reactor\GrabLoopEats
    arguments:
      - '@AppBundle\LoopEat\Client'
    tags:
        - name: event_subscriber
          subscribes_to: order:picked

  coopcycle.domain.order.reactor.create_geofencing_channel:
    class: AppBundle\Domain\Order\Reactor\CreateGeofencingChannel
    arguments:
      $geofencing: '@AppBundle\Service\Geofencing'
    tags:
        - name: event_subscriber
          subscribes_to: order:picked

  coopcycle.domain.order.reactor.delete_geofencing_channel:
    class: AppBundle\Domain\Order\Reactor\DeleteGeofencingChannel
    arguments:
      $geofencing: '@AppBundle\Service\Geofencing'
    tags:
        - name: event_subscriber
          subscribes_to: order:dropped
        - name: event_subscriber
          subscribes_to: order:cancelled

  # WARNING
  # Event subscribers are registered using the same order as they are declared in this file.
  # The "priority" attribute has no effect.
  # The reactor to update state *MUST* be registered last in the chain.
  # @see https://github.com/SimpleBus/SimpleBus/blob/master/Bundle/SymfonyBridge/src/DependencyInjection/Compiler/RegisterSubscribers.php
  coopcycle.domain.order.reactor.update_state:
    class: AppBundle\Domain\Order\Reactor\UpdateState
    arguments:
      - '@sm.factory'
      - '@sylius.order_processing.order_payment_processor'
      - '@event_bus'
      - '@AppBundle\Utils\OrderTimeHelper'
    tags:
        - name: event_subscriber
          subscribes_to: order:created
        - name: event_subscriber
          subscribes_to: order:accepted
        - name: event_subscriber
          subscribes_to: order:refused
        - name: event_subscriber
          subscribes_to: order:cancelled
        - name: event_subscriber
          subscribes_to: order:fulfilled
        - name: event_subscriber
          subscribes_to: order:checkout_succeeded
        - name: event_subscriber
          subscribes_to: order:checkout_failed

  coopcycle.domain.order.reactor.cancel_edenred_transaction:
    class: AppBundle\Domain\Order\Reactor\CancelEdenredTransaction
    arguments:
      - '@AppBundle\Edenred\Client'
      - '@sm.factory'
    tags:
        - name: event_subscriber
          subscribes_to: order:refused
        - name: event_subscriber
          subscribes_to: order:cancelled
