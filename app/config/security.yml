# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_CUSTOMER: ROLE_USER
        ROLE_COURIER: ROLE_CUSTOMER
        ROLE_RESTAURANT: ROLE_USER
        ROLE_ADMIN: ROLE_COURIER

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        api_orders:
            pattern:   ^/api/orders
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        api_deliveries:
            pattern:   ^/api/deliveries
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        api_me:
            pattern:   ^/api/me
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        token_check:
            pattern:   ^/api/token/check
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        token_refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true

        web:
            pattern:            ^/
            form_login:
                provider:       fos_userbundle
            logout: true
            anonymous: ~

        main:
            anonymous: ~

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/check, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/me, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/deliveries, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/orders, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/order/public, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/order, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/profile/restaurants, roles: ROLE_RESTAURANT }
        - { path: ^/profile, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
